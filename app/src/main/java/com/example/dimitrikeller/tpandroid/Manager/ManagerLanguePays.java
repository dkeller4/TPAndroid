package com.example.dimitrikeller.tpandroid.Manager;


import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import com.example.dimitrikeller.tpandroid.Entite.LanguePays;
import com.example.dimitrikeller.tpandroid.Service.ConnexionBD;

import java.util.ArrayList;

/**
 * Created by Marianne on 2017-03-13.
 */

public class ManagerLanguePays {

    public static String LANGUE_PAYS_ID_PAYS = "idPays";
    public static String LANGUE_PAYS_ID_LANGUE = "idLangue";
    public static String LANGUE_PAYS_TABLE = "languePays";

    public static String LANGUE_PAYS_TABLE_CREATE = "create table " + LANGUE_PAYS_TABLE + "(" +
            LANGUE_PAYS_ID_LANGUE + " INTEGER, " +
            LANGUE_PAYS_ID_PAYS + " INTEGER) ;";

    public static String queryINSERT = "INSERT INTO `LanguePays` (idPays,idLangue) VALUES (1,127),\n" +
            " (1,42),\n" +
            " (1,158),\n" +
            " (1,170),\n" +
            " (2,176),\n" +
            " (2,181),\n" +
            " (2,4),\n" +
            " (3,146),\n" +
            " (3,36),\n" +
            " (4,8),\n" +
            " (5,32),\n" +
            " (6,23),\n" +
            " (7,128),\n" +
            " (8,37),\n" +
            " (9,37),\n" +
            " (10,113),\n" +
            " (10,37),\n" +
            " (10,39),\n" +
            " (11,8),\n" +
            " (12,39),\n" +
            " (12,70),\n" +
            " (12,32),\n" +
            " (12,37),\n" +
            " (13,62),\n" +
            " (14,39),\n" +
            " (14,37),\n" +
            " (14,113),\n" +
            " (15,37),\n" +
            " (16,61),\n" +
            " (16,142),\n" +
            " (16,59),\n" +
            " (16,32),\n" +
            " (17,133),\n" +
            " (17,12),\n" +
            " (17,62),\n" +
            " (18,37),\n" +
            " (19,169),\n" +
            " (19,37),\n" +
            " (19,8),\n" +
            " (19,42),\n" +
            " (21,19),\n" +
            " (21,37),\n" +
            " (22,8),\n" +
            " (23,37),\n" +
            " (24,113),\n" +
            " (24,32),\n" +
            " (24,47),\n" +
            " (25,37),\n" +
            " (25,39),\n" +
            " (26,47),\n" +
            " (27,128),\n" +
            " (27,37),\n" +
            " (28,34),\n" +
            " (29,133),\n" +
            " (29,14),\n" +
            " (30,107),\n" +
            " (31,129),\n" +
            " (31,11),\n" +
            " (31,39),\n" +
            " (32,22),\n" +
            " (32,147),\n" +
            " (32,59),\n" +
            " (33,160),\n" +
            " (33,37),\n" +
            " (34,39),\n" +
            " (34,128),\n" +
            " (34,47),\n" +
            " (34,37),\n" +
            " (35,105),\n" +
            " (35,37),\n" +
            " (36,162),\n" +
            " (36,15),\n" +
            " (37,47),\n" +
            " (38,131),\n" +
            " (38,47),\n" +
            " (39,47),\n" +
            " (39,37),\n" +
            " (39,80),\n" +
            " (40,47),\n" +
            " (40,37),\n" +
            " (41,47),\n" +
            " (41,37),\n" +
            " (41,71),\n" +
            " (42,128),\n" +
            " (43,39),\n" +
            " (44,180),\n" +
            " (45,36),\n" +
            " (45,162),\n" +
            " (45,37),\n" +
            " (46,39),\n" +
            " (47,8),\n" +
            " (47,47),\n" +
            " (48,82),\n" +
            " (49,37),\n" +
            " (49,82),\n" +
            " (50,37),\n" +
            " (50,39),\n" +
            " (51,47),\n" +
            " (52,147),\n" +
            " (52,59),\n" +
            " (53,39),\n" +
            " (54,31),\n" +
            " (54,32),\n" +
            " (54,37),\n" +
            " (54,46),\n" +
            " (55,47),\n" +
            " (55,1),\n" +
            " (55,145),\n" +
            " (55,8),\n" +
            " (56,37),\n" +
            " (57,37),\n" +
            " (57,47),\n" +
            " (57,8),\n" +
            " (58,8),\n" +
            " (58,37),\n" +
            " (58,57),\n" +
            " (58,42),\n" +
            " (59,39),\n" +
            " (60,1),\n" +
            " (60,8),\n" +
            " (61,23),\n" +
            " (61,51),\n" +
            " (61,39),\n" +
            " (61,41),\n" +
            " (62,40),\n" +
            " (62,133),\n" +
            " (63,37),\n" +
            " (63,39),\n" +
            " (63,47),\n" +
            " (64,121),\n" +
            " (64,37),\n" +
            " (64,157),\n" +
            " (64,6),\n" +
            " (65,45),\n" +
            " (65,37),\n" +
            " (66,44),\n" +
            " (66,151),\n" +
            " (67,21),\n" +
            " (67,47),\n" +
            " (67,26),\n" +
            " (68,47),\n" +
            " (69,37),\n" +
            " (69,175),\n" +
            " (70,62),\n" +
            " (70,74),\n" +
            " (70,12),\n" +
            " (70,133),\n" +
            " (71,5),\n" +
            " (71,35),\n" +
            " (71,37),\n" +
            " (71,165),\n" +
            " (72,70),\n" +
            " (72,37),\n" +
            " (72,39),\n" +
            " (72,128),\n" +
            " (73,47),\n" +
            " (73,36),\n" +
            " (73,37),\n" +
            " (74,37),\n" +
            " (75,79),\n" +
            " (75,37),\n" +
            " (75,31),\n" +
            " (76,47),\n" +
            " (77,25),\n" +
            " (77,37),\n" +
            " (78,39),\n" +
            " (79,37),\n" +
            " (79,47),\n" +
            " (80,47),\n" +
            " (81,39),\n" +
            " (81,47),\n" +
            " (82,47),\n" +
            " (83,128),\n" +
            " (84,37),\n" +
            " (85,60),\n" +
            " (85,47),\n" +
            " (86,39),\n" +
            " (87,180),\n" +
            " (87,37),\n" +
            " (87,180),\n" +
            " (88,61),\n" +
            " (89,54),\n" +
            " (89,37),\n" +
            " (90,37),\n" +
            " (90,47),\n" +
            " (91,37),\n" +
            " (92,37),\n" +
            " (93,37),\n" +
            " (94,31),\n" +
            " (94,46),\n" +
            " (95,99),\n" +
            " (95,37),\n" +
            " (96,37),\n" +
            " (97,37),\n" +
            " (98,19),\n" +
            " (98,57),\n" +
            " (98,154),\n" +
            " (98,37),\n" +
            " (99,73),\n" +
            " (99,64),\n" +
            " (99,37),\n" +
            " (99,113),\n" +
            " (100,85),\n" +
            " (100,8),\n" +
            " (100,62),\n" +
            " (101,42),\n" +
            " (101,85),\n" +
            " (102,37),\n" +
            " (102,49),\n" +
            " (103,37),\n" +
            " (103,31),\n" +
            " (103,32),\n" +
            " (103,69),\n" +
            " (104,8),\n" +
            " (104,37),\n" +
            " (104,56),\n" +
            " (105,32),\n" +
            " (105,70),\n" +
            " (105,136),\n" +
            " (105,47),\n" +
            " (106,37),\n" +
            " (107,72),\n" +
            " (108,37),\n" +
            " (108,128),\n" +
            " (109,8),\n" +
            " (109,37),\n" +
            " (110,133),\n" +
            " (110,78),\n" +
            " (111,152),\n" +
            " (111,37),\n" +
            " (112,133),\n" +
            " (112,170),\n" +
            " (112,88),\n" +
            " (113,37),\n" +
            " (114,8),\n" +
            " (114,37),\n" +
            " (115,37),\n" +
            " (115,47),\n" +
            " (115,94),\n" +
            " (116,39),\n" +
            " (117,37),\n" +
            " (117,100),\n" +
            " (118,37),\n" +
            " (119,37),\n" +
            " (120,47),\n" +
            " (120,37),\n" +
            " (121,181),\n" +
            " (121,37),\n" +
            " (121,176),\n" +
            " (121,149),\n" +
            " (122,97),\n" +
            " (122,95),\n" +
            " (122,133),\n" +
            " (123,8),\n" +
            " (123,37),\n" +
            " (123,47),\n" +
            " (123,62),\n" +
            " (124,37),\n" +
            " (125,37),\n" +
            " (125,70),\n" +
            " (125,8),\n" +
            " (126,32),\n" +
            " (128,133),\n" +
            " (128,95),\n" +
            " (128,126),\n" +
            " (129,32),\n" +
            " (129,90),\n" +
            " (129,47),\n" +
            " (130,180),\n" +
            " (130,128),\n" +
            " (130,180),\n" +
            " (131,162),\n" +
            " (131,146),\n" +
            " (131,101),\n" +
            " (132,47),\n" +
            " (132,98),\n" +
            " (133,105),\n" +
            " (133,37),\n" +
            " (133,153),\n" +
            " (133,180),\n" +
            " (134,118),\n" +
            " (135,33),\n" +
            " (135,37),\n" +
            " (136,18),\n" +
            " (136,47),\n" +
            " (137,106),\n" +
            " (137,37),\n" +
            " (138,8),\n" +
            " (138,47),\n" +
            " (139,47),\n" +
            " (140,8),\n" +
            " (140,47),\n" +
            " (141,47),\n" +
            " (142,39),\n" +
            " (143,37),\n" +
            " (144,133),\n" +
            " (144,132),\n" +
            " (144,162),\n" +
            " (145,37),\n" +
            " (145,70),\n" +
            " (145,47),\n" +
            " (146,103),\n" +
            " (146,133),\n" +
            " (147,37),\n" +
            " (148,128),\n" +
            " (149,4),\n" +
            " (149,32),\n" +
            " (149,63),\n" +
            " (149,37),\n" +
            " (150,37),\n" +
            " (150,108),\n" +
            " (151,37),\n" +
            " (151,111),\n" +
            " (152,37),\n" +
            " (152,39),\n" +
            " (153,83),\n" +
            " (153,47),\n" +
            " (153,55),\n" +
            " (154,65),\n" +
            " (154,178),\n" +
            " (154,55),\n" +
            " (154,37),\n" +
            " (155,37),\n" +
            " (156,138),\n" +
            " (156,109),\n" +
            " (156,115),\n" +
            " (156,114),\n" +
            " (157,47),\n" +
            " (158,37),\n" +
            " (158,100),\n" +
            " (159,8),\n" +
            " (159,37),\n" +
            " (159,169),\n" +
            " (160,8),\n" +
            " (160,91),\n" +
            " (160,152),\n" +
            " (160,37),\n" +
            " (161,170),\n" +
            " (161,155),\n" +
            " (161,133),\n" +
            " (162,37),\n" +
            " (162,169),\n" +
            " (162,137),\n" +
            " (162,124),\n" +
            " (163,37),\n" +
            " (164,37),\n" +
            " (164,39),\n" +
            " (165,58),\n" +
            " (165,37),\n" +
            " (166,39),\n" +
            " (166,52),\n" +
            " (167,48),\n" +
            " (167,113),\n" +
            " (168,129),\n" +
            " (168,11),\n" +
            " (168,39),\n" +
            " (169,159),\n" +
            " (169,37),\n" +
            " (170,126),\n" +
            " (171,166),\n" +
            " (171,47),\n" +
            " (172,37),\n" +
            " (172,39),\n" +
            " (173,128),\n" +
            " (174,8),\n" +
            " (174,39),\n" +
            " (175,75),\n" +
            " (175,139),\n" +
            " (175,93),\n" +
            " (175,47),\n" +
            " (176,75),\n" +
            " (176,47),\n" +
            " (176,93),\n" +
            " (177,39),\n" +
            " (178,47),\n" +
            " (178,75),\n" +
            " (178,93),\n" +
            " (179,28),\n" +
            " (179,141),\n" +
            " (180,47),\n" +
            " (181,132),\n" +
            " (181,61),\n" +
            " (182,50),\n" +
            " (182,37),\n" +
            " (182,30),\n" +
            " (183,133),\n" +
            " (183,164),\n" +
            " (184,37),\n" +
            " (184,134),\n" +
            " (184,47),\n" +
            " (184,152),\n" +
            " (185,8),\n" +
            " (186,70),\n" +
            " (187,47),\n" +
            " (188,37),\n" +
            " (189,37),\n" +
            " (190,37),\n" +
            " (191,37),\n" +
            " (191,47),\n" +
            " (192,37),\n" +
            " (192,143),\n" +
            " (193,143),\n" +
            " (193,161),\n" +
            " (193,37),\n" +
            " (194,128),\n" +
            " (195,47),\n" +
            " (195,175),\n" +
            " (196,146),\n" +
            " (196,61),\n" +
            " (196,147),\n" +
            " (197,37),\n" +
            " (198,37),\n" +
            " (198,105),\n" +
            " (198,153),\n" +
            " (199,141),\n" +
            " (199,61),\n" +
            " (200,142),\n" +
            " (201,145),\n" +
            " (201,37),\n" +
            " (201,8),\n" +
            " (201,70),\n" +
            " (202,37),\n" +
            " (202,8),\n" +
            " (203,37),\n" +
            " (203,153),\n" +
            " (203,140),\n" +
            " (204,44),\n" +
            " (204,151),\n" +
            " (204,138),\n" +
            " (205,130),\n" +
            " (205,47),\n" +
            " (205,70),\n" +
            " (205,32),\n" +
            " (206,113),\n" +
            " (206,37),\n" +
            " (207,115),\n" +
            " (207,133),\n" +
            " (208,148),\n" +
            " (208,37),\n" +
            " (209,85),\n" +
            " (209,62),\n" +
            " (209,8),\n" +
            " (210,155),\n" +
            " (210,133),\n" +
            " (211,180),\n" +
            " (211,180),\n" +
            " (212,8),\n" +
            " (212,152),\n" +
            " (212,37),\n" +
            " (213,8),\n" +
            " (213,47),\n" +
            " (214,156),\n" +
            " (214,37),\n" +
            " (215,35),\n" +
            " (215,47),\n" +
            " (216,37),\n" +
            " (217,161),\n" +
            " (217,37),\n" +
            " (218,37),\n" +
            " (218,39),\n" +
            " (218,47),\n" +
            " (219,8),\n" +
            " (219,47),\n" +
            " (220,170),\n" +
            " (220,133),\n" +
            " (220,158),\n" +
            " (221,162),\n" +
            " (221,85),\n" +
            " (221,12),\n" +
            " (222,143),\n" +
            " (222,37),\n" +
            " (223,133),\n" +
            " (223,168),\n" +
            " (223,126),\n" +
            " (224,39),\n" +
            " (225,47),\n" +
            " (225,37),\n" +
            " (225,17),\n" +
            " (226,89),\n" +
            " (226,47),\n" +
            " (226,70),\n" +
            " (227,39),\n" +
            " (228,47),\n" +
            " (228,37),\n" +
            " (228,172),\n" +
            " (228,180),\n" +
            " (229,47),\n" +
            " (230,8),\n" +
            " (231,37),\n" +
            " (232,144),\n" +
            " (232,116),\n" +
            " (232,110),\n" +
            " (232,37);";


    public static String DROP_LANGUE_PAYS_TABLE = "drop table if exists "+ LANGUE_PAYS_TABLE ;

    public static String queryGetAll = "select * from "+ LANGUE_PAYS_TABLE;


    public static ArrayList<LanguePays> getAll(Context ctx){
        ArrayList<LanguePays> listeLanguePays = new ArrayList<>();
        SQLiteDatabase bd = ConnexionBD.getBD(ctx);
        Cursor c = bd.rawQuery(queryGetAll,null);

        while (c.moveToNext()){
            LanguePays e = new LanguePays();
            e.setIdLangue(c.getInt(0));
            e.setIdPays(c.getInt(1));

            listeLanguePays.add(e);
        }

        c.close();
        ConnexionBD.close();
        return listeLanguePays;
    }

    public static LanguePays getByIdLangue(Context ctx, int idCompare){
        ArrayList<LanguePays> listeLanguePays = getAll(ctx);

        LanguePays retour = null;
        for (LanguePays l :
                listeLanguePays) {
            if(l.getIdLangue() == idCompare)
                retour = l;
        }
        return  retour;
    }


    public static LanguePays getByIdPays(Context ctx,int idCompare){
        ArrayList<LanguePays> listeLanguePays = getAll(ctx);

        LanguePays retour = null;
        for (LanguePays l :
                listeLanguePays) {
            if(l.getIdPays() == idCompare)
                retour = l;
        }
        return  retour;
    }

    public static ArrayList<LanguePays> getAllByIdPays(Context ctx,int idCompare){
        ArrayList<LanguePays> listeLanguePays = getAll(ctx);

        ArrayList<LanguePays> retour = new ArrayList<>();

        for (LanguePays l :
                listeLanguePays) {
            if(l.getIdPays() == idCompare)
                retour.add(l);
        }
        return  retour;
    }

}
